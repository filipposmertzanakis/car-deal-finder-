name: Car Scraping with Undetected Chromedriver

on:
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes
  workflow_dispatch:          # Allow manual triggers

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 30       # Prevent hanging jobs

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Verify script exists
      run: |
        if [ ! -f "new_workflow/scrape_with_score.py" ]; then
          echo "❌ Error: Script not found!"
          exit 1
        fi
        echo "✅ Script found"

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          wget \
          unzip \
          libnss3-dev \
          libgbm-dev \
          libxss1 \
          libappindicator3-1 \
          fonts-liberation \
          libnspr4 \
          libnss3 \
          libx11-xcb1 \
          libxtst6 \
          libxrandr2 \
          libasound2-dev \
          libpangocairo-1.0-0 \
          libatk1.0-0 \
          libcairo-gobject2 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0

    - name: Setup Chrome and Chromedriver
      run: |
        echo "⬇️ Installing Chrome..."
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

        # Get Chrome version
        CHROME_VERSION=$(google-chrome --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')
        CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d. -f1)
        echo "Chrome version: $CHROME_VERSION (Major: $CHROME_MAJOR_VERSION)"

        # Download ChromeDriver
        echo "⬇️ Downloading matching ChromeDriver..."
        CHROMEDRIVER_URL="https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROME_VERSION}/linux64/chromedriver-linux64.zip"
        wget -O chromedriver.zip "$CHROMEDRIVER_URL"

        # Install in user directory
        unzip chromedriver.zip -d $HOME
        mv $HOME/chromedriver-linux64/chromedriver $HOME/chromedriver
        chmod +x $HOME/chromedriver
        echo "$HOME" >> $GITHUB_PATH

        echo "✅ Installed versions:"
        google-chrome --version
        $HOME/chromedriver --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install undetected-chromedriver requests beautifulsoup4 selenium supabase python-dotenv

    - name: Run scraping script
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      run: |
        # Enable debug logging
        export DEBUG=1
        python -u new_workflow/scrape_with_score.py 2>&1 | tee scrape.log
        echo "=== Scrape log ==="
        cat scrape.log
        echo "=================="

    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: scrape-logs
        path: scrape.log