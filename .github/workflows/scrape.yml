name: Car Scraping with Undetected Chromedriver

on:
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes
  workflow_dispatch:          # Allow manual triggers

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 30       # Prevent hanging jobs

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Verify script exists
      run: |
        if [ ! -f "new_workflow/scrape_with_score.py" ]; then
          echo "❌ Error: Script not found!"
          exit 1
        fi
        echo "✅ Script found"

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgbm-dev wget unzip

    - name: Download Chrome 138 and Chromedriver 138
      run: |
        echo "⬇️ Downloading Chrome..."
        wget https://storage.googleapis.com/chrome-for-testing-public/138.0.7204.94/linux64/chrome-linux64.zip
        unzip chrome-linux64.zip
        
        echo "⬇️ Downloading Chromedriver..."
        wget https://storage.googleapis.com/chrome-for-testing-public/138.0.7204.94/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip
        
        echo "✅ Moving binaries to system paths"
        sudo mv chrome-linux64/chrome /usr/local/bin/google-chrome
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
        sudo chmod +x /usr/local/bin/google-chrome
        sudo chmod +x /usr/local/bin/chromedriver
        
        echo "✅ Installed versions:"
        google-chrome --version
        chromedriver --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install undetected-chromedriver requests beautifulsoup4 selenium supabase python-dotenv

    - name: Run scraping script
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      run: |
        # Enable debug logging
        export DEBUG=1
        python -u new_workflow/scrape_with_score.py 2>&1 | tee scrape.log
        echo "=== Scrape log ==="
        cat scrape.log
        echo "=================="